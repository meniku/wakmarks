// Generated by CoffeeScript 1.3.1
(function() {

  describe("Bookmark", function() {
    beforeEach(function() {
      return Bookmark.reset();
    });
    it("should have empty records", function() {
      return expect(Bookmark.records).toEqual({});
    });
    describe("new instance", function() {
      var bookmark;
      bookmark = null;
      beforeEach(function() {
        return bookmark = new Bookmark(1, "My first Bookmark", "http://google.de");
      });
      it("should have correct id", function() {
        return expect(bookmark.id).toEqual(1);
      });
      it("should have correct name", function() {
        return expect(bookmark.name).toEqual("My first Bookmark");
      });
      it("should have correct URL", function() {
        return expect(bookmark.url).toEqual("http://google.de");
      });
      it("should not be contained in records", function() {
        return expect(Bookmark.records).toEqual({});
      });
      it("should be a new record", function() {
        return expect(bookmark.newRecord).toEqual(true);
      });
      it("should not be a new record", function() {
        bookmark.create();
        return expect(bookmark.newRecord).toEqual(false);
      });
      it("should be contained in records", function() {
        bookmark.create();
        return expect(Bookmark.records).toEqual({
          1: bookmark
        });
      });
      it("should not be a new record", function() {
        bookmark.save();
        return expect(bookmark.newRecord).toEqual(false);
      });
      it("should be contained in records", function() {
        bookmark.save();
        return expect(Bookmark.records).toEqual({
          1: bookmark
        });
      });
      it("should not be contained in records", function() {
        bookmark.create();
        bookmark.destroy();
        return expect(Bookmark.records).toEqual({});
      });
      it("should not create twice", function() {
        bookmark.create();
        return expect(function() {
          return bookmark.create();
        }).toThrow("record already exists");
      });
      it("should not destroy twice", function() {
        bookmark.create();
        bookmark.destroy();
        return expect(function() {
          return bookmark.destroy();
        }).toThrow("record not yet exists");
      });
      return it("should not update", function() {
        bookmark.create();
        bookmark.destroy();
        return expect(function() {
          return bookmark.update();
        }).toThrow("record not yet exists");
      });
    });
    return describe("multiple instances", function() {
      var bookmark1, bookmark2, bookmark3;
      bookmark1 = null;
      bookmark2 = null;
      bookmark3 = null;
      beforeEach(function() {
        bookmark1 = new Bookmark(1, "My first Bookmark", "http://google.de");
        bookmark1.save();
        bookmark2 = new Bookmark(2, "My second Bookmark", "http://google.de");
        bookmark2.save();
        bookmark3 = new Bookmark(3, "My third Bookmark", "http://google.de");
        return bookmark3.save();
      });
      it("should find nothing", function() {
        return expect(function() {
          return Bookmark.find(4);
        }).toThrow("unknown record");
      });
      it("should find bookmark 2", function() {
        return expect(Bookmark.find(2)).toEqual(bookmark2);
      });
      return it("should contain all instances", function() {
        return expect();
      });
    });
  });

}).call(this);
